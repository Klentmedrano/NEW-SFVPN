#!/bin/bash

## Copyright ©UDPTeam

## Discord: https://discord.gg/civ3

## Script to keep-alive your DNSTT server domain record query from target resolver/local dns server

## Run this script excluded to your VPN tunnel (split vpn tunneling mode)

## run command: ./globe-klent03.sh l



## Your DNSTT Nameserver & your Domain `A` Record

NS='dns.sgae01.fcafessh.net'
NS1='ns.kaisen.ismaelsakalam.online'
NS2=''
NS3=''
NS4=''
A=''

## Repeat dig cmd loop time (seconds) (positive interger only)

LOOP_DELAY=5



## Add your DNS here

declare -a HOSTS=('124.6.181.12' '124.6.181.4' '124.6.181.44' '124.6.181.36' '124.6.181.20' '124.6.181.31' '121.54.70.166' '121.54.70.130' '112.198.115.36')



## Linux' dig command executable filepath

## Select value: "CUSTOM|C" or "DEFAULT|D"

DIG_EXEC="DEFAULT"

## if set to CUSTOM, enter your custom dig executable path here

CUSTOM_DIG=/data/data/com.termux/files/home/go/bin/fastdig



######################################

######################################

######################################

######################################

######################################

VER=0.1

case "${DIG_EXEC}" in

 DEFAULT|D)

 _DIG="$(command -v dig)"

 ;;

 CUSTOM|C)

 _DIG="${CUSTOM_DIG}"

 ;;

esac

if [ ! $(command -v ${_DIG}) ]; then

 printf "%b" "Dig command failed to run, " \

 "please install dig(dnsutils) or check " \

 "\$DIG_EXEC & \$CUSTOM_DIG variable inside $( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )/$(basename "$0") file.\n" && exit 1

fi
check(){
  local border_color="\e[95m"  # Light magenta color
  local success_color="\e[92m"  # Light green color
  local fail_color="\e[91m"    # Light red color
  local header_color="\e[96m"  # Light cyan color
  local reset_color="\e[0m"    # Reset to default terminal color
  local padding="  "            # Padding for aesthetic

  # Header
  echo -e "${border_color}┌──────────────────────────────────────────────┐${reset_color}"
  echo -e "${border_color}│${header_color}${padding}DNS Status Check Results${padding}${reset_color}"
  echo -e "${border_color}├──────────────────────────────────────────────┤${reset_color}"
  
  # Results
  for T in "${DNS_IPS[@]}"; do
    for R in "${NAME_SERVERS[@]}"; do
      result=$(${_DIG} @${T} ${R} +short)
      if [ -z "$result" ]; then
        STATUS="${success_color}Success${reset_color}"
      else
        STATUS="${fail_color}Failed${reset_color}"
      fi
      echo -e "${border_color}│${padding}${reset_color}DNS IP: ${T}${padding}${reset_color}"
      echo -e "${border_color}│${padding}NameServer: ${R}${padding}${reset_color}"
      echo -e "${border_color}│${padding}Status: ${STATUS}${padding}${reset_color}"
    done
  done

  # Check count and Loop Delay
  echo -e "${border_color}├──────────────────────────────────────────────┤${reset_color}"
  echo -e "${border_color}│${padding}${header_color}Check count: ${count}${padding}${reset_color}"
  echo -e "${border_color}│${padding}Loop Delay: ${LOOP_DELAY} seconds${padding}${reset_color}"
 
  # Footer
  echo -e "${border_color}└──────────────────────────────────────────────┘${reset_color}"
}
endscript() {

 unset NS NS1 NS2 NS3 NS4 NS5 NS6 NS7 NS8 NS9 NS10 NS11 NS12 NS13 NS14 NS15 NS16 NS17 NS18 NS19 NS20 NS21 NS22 NS23 NS24 A LOOP_DELAY HOSTS _DIG DIG_EXEC CUSTOM_DIG T R M

 exit 1

}

trap endscript 2 15

check(){

 for ((i=0; i<"${#HOSTS[*]}"; i++)); do

  for R in "${A}" "${NS}" "${NS1}" "${NS2}" "${NS3}" "${NS4}" "${NS5}" "${NS6}" "${NS7}" "${NS8}" "${NS9}" "${NS10}" "${NS11}" "${NS12}" "${NS13}" "${NS14}" "${NS15}" "${NS16}" "${NS17}" "${NS18}" "${NS19}" "${NS20}" "${NS21}" "${NS22}" "${NS23}" "${NS24}"; do

   T="${HOSTS[$i]}"
    -z $(timeout -k 3 3 ${_DIG} @${T} ${R})  && M=31 || M=32;
   echo -e "\e[1;${M}m\$ R:${R} D:${T}\e[0m"
   unset T R M
  done
 done
}


echo "DNSTT Keep-Alive script <Discord @civ3>"

echo -e "DNS List: [\e[1;34m${HOSTS[*]}\e[0m]"

echo "CTRL + C to close script"

 "${LOOP_DELAY}" -eq 1  && let "LOOP_DELAY++";

case "${@}" in

 loop|l)

 echo "Script loop: ${LOOP_DELAY} seconds"

 while true; do

  check

  echo '.--. .-.. . .- ... .     .-- .- .. -'

  sleep ${LOOP_DELAY}

 done

 ;;

 *)

 check

 ;;

esac

exit 0
